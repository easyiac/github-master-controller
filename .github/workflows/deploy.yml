---
name: Deplay Pulumi Github Actions
"on":
    push:
    pull_request:
    workflow_dispatch:
jobs:
    deplay-pulumi-github-actions-job:
        name: deplay-pulumi-github-actions-job
        runs-on: ubuntu-latest
        environment: production
        steps:
            - uses: actions/checkout@v4

            - name: Import Secrets
              id: import-secrets
              uses: hashicorp/vault-action@v3
              with:
                  url: "${{secrets.VAULT_ADDR}}"
                  caCertificate: ${{ secrets.ROOT_CA_CERTIFICATE_CONTENT_BASE64 }}
                  clientKey: ${{ secrets.VAULT_CLIENT_PRIVATE_KEY_CONTENT_BASE64 }}
                  clientCertificate: ${{ secrets.VAULT_CLIENT_CERTIFICATE_CONTENT_BASE64 }}
                  method: approle
                  roleId: ${{ secrets.VAULT_APPROLE_ROLE_ID }}
                  secretId: ${{ secrets.VAULT_APPROLE_SECRET_ID }}
                  exportEnv: false
                  exportToken: false
                  secrets: |
                      secret/data/external_services/pulumi PULUMI_PROD_PAT | PULUMI_PROD_PAT ;

            - name: Create environment file
              run: |
                  .github/files/create-env-file.sh
              env:
                  ROOT_CA_CERTIFICATE_CONTENT_BASE64: ${{ secrets.ROOT_CA_CERTIFICATE_CONTENT_BASE64 }}
                  VAULT_CLIENT_PRIVATE_KEY_CONTENT_BASE64: ${{ secrets.VAULT_CLIENT_PRIVATE_KEY_CONTENT_BASE64 }}
                  VAULT_CLIENT_CERTIFICATE_CONTENT_BASE64: ${{ secrets.VAULT_CLIENT_CERTIFICATE_CONTENT_BASE64 }}
                  VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
                  VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}
                  VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}

            - name: Set up Node.js 20.x
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"

            - name: After setting up the Pulumi project specific language environment,
                  we need to install the dependencies also
              run: npm install

            - name: Install Pulumi CLI
              uses: pulumi/action-install-pulumi-cli@v2

            - name: Create Pulumi stack
              run: |+
                  npm install
                  pulumi stack init arpanrec/github-master-controller/production || true
              env:
                  PULUMI_ACCESS_TOKEN: ${{ steps.import-secrets.outputs.PULUMI_PROD_PAT }}

            - name: Pulumi preview
              uses: pulumi/actions@v5
              with:
                  command: preview
                  stack-name: arpanrec/production
              env:
                  PULUMI_ACCESS_TOKEN: ${{ steps.import-secrets.outputs.PULUMI_PROD_PAT }}

            - name: Pulumi up
              uses: pulumi/actions@v5
              with:
                  command: up
                  stack-name: arpanrec/production
              env:
                  PULUMI_ACCESS_TOKEN: ${{ steps.import-secrets.outputs.PULUMI_PROD_PAT }}
              if: github.ref == 'refs/heads/main'
