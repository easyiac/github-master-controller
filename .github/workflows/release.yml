---
name: Release
"on":
    push:
    pull_request:
    workflow_dispatch:

jobs:
    release:
        environment: production
        permissions:
            contents: write
            issues: write
            pull-requests: write
            id-token: write
            actions: write
            deployments: write
            checks: write
            discussions: write
            packages: write
            pages: write
            repository-projects: write
            security-events: write
            statuses: write
        name: Release
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Import Secrets
              id: import-secrets
              uses: hashicorp/vault-action@v3
              with:
                  url: "${{ secrets.VAULT_ADDR }}"
                  caCertificate: ${{ secrets.ROOT_CA_CERTIFICATE_CONTENT_BASE64 }}
                  clientKey: ${{ secrets.VAULT_CLIENT_PRIVATE_KEY_CONTENT_BASE64 }}
                  clientCertificate: ${{ secrets.VAULT_CLIENT_CERTIFICATE_CONTENT_BASE64 }}
                  method: approle
                  roleId: ${{ secrets.VAULT_APPROLE_ROLE_ID }}
                  secretId: ${{ secrets.VAULT_APPROLE_SECRET_ID }}
                  exportEnv: false
                  exportToken: false
                  secrets: |
                      secret/data/external_services/github ARPANREC_GITHUB_ACTIONS_GPG_PASSPHRASE | ARPANREC_GITHUB_ACTIONS_GPG_PASSPHRASE ;
                      secret/data/external_services/github ARPANREC_GITHUB_ACTIONS_GPG_PRIVATE_KEY | ARPANREC_GITHUB_ACTIONS_GPG_PRIVATE_KEY ;

            - name: Import GPG key
              id: import-gpg
              uses: crazy-max/ghaction-import-gpg@v6
              with:
                  gpg_private_key: "${{ steps.import-secrets.outputs.ARPANREC_GITHUB_ACTIONS_GPG_PRIVATE_KEY }}"
                  passphrase: "${{ steps.import-secrets.outputs.ARPANREC_GITHUB_ACTIONS_GPG_PASSPHRASE }}"
                  git_user_signingkey: true
                  git_commit_gpgsign: true
                  trust_level: 5

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: npm

            - name: Install node dependencies
              run: |+
                  set -ex
                  npm i --include=dev

            - name: Release
              run: |+
                  set -ex
                  git config --global user.email "${{ steps.import-gpg.outputs.email }}"
                  git config --global user.name "${{ steps.import-gpg.outputs.name }}"
                  npx semantic-release@23.0.8 --extends ./release.config.cjs
              env:
                  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
                  GIT_AUTHOR_NAME: "${{ steps.import-gpg.outputs.name }}"
                  GIT_AUTHOR_EMAIL: "${{ steps.import-gpg.outputs.email }}"
                  GIT_COMMITTER_NAME: "${{ steps.import-gpg.outputs.name }}"
                  GIT_COMMITTER_EMAIL: "${{ steps.import-gpg.outputs.email }}"
